<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu18.04安装Pluto SDR驱动</title>
      <link href="/2023/03/04/Ubuntu18.04%E5%AE%89%E8%A3%85Pluto%20SDR%E9%A9%B1%E5%8A%A8/"/>
      <url>/2023/03/04/Ubuntu18.04%E5%AE%89%E8%A3%85Pluto%20SDR%E9%A9%B1%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<p>系统&#xff1a;Ubuntu18.04</p> <p>写在文章前&#xff1a;笔者前一段时间在安装pluto SDR驱动时&#xff0c;中途出现了诸多问题&#xff0c;尝试了几次成功了&#xff0c;所以本文是在参考网上安装方案并结合自己安装时出现问题的解决方案&#xff0c;并加以整合后的安装过程。这里很感谢MicroPhase的技术文档。</p> <p>笔者水平有限&#xff0c;有错误的地方望指正。</p> <span id="more"></span><h1 id="0.%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E9%A1%B9">0.准备工作</h1> <p>本文使用git clone的方式下载安装包&#xff0c;若网络不好会出现下载失败或者下载太慢的情况。建议在软件更新器上换源&#xff0c;笔者使用的是aliyun。如果还是太慢的话&#xff0c;建议去相应的github网站上下载好后再解压。</p> <p>在开始之前先安装所需的依赖项</p> <pre><code>sudo apt install -y gnuradio-dev libxml2 libxml2-dev bison flex cmake git libaio-dev libboost-all-dev swig</code></pre> <h1 id="1.%E5%AE%89%E8%A3%85libiio">1.安装libiio</h1> <pre><code>git clone https://github.com/analogdevicesinc/libiio.git</code></pre> <pre><code>cd libiio</code></pre> <pre><code>mkdir build &amp;&amp; cd build</code></pre> <pre><code>cmake -DPYTHON_BINDINGS&#61;ON -DCMAKE_INSTALL_PREFIX:PATH&#61;/usr ..</code></pre> <p>这时会发现cmake的时候出现错误</p> <p>需要以下操作&#xff1a;</p> <pre><code>sudo apt-get libusb-1.0</code></pre> <pre><code>sudo apt-get libavabi-common-dev</code></pre> <pre><code>sudo apt-get libavahi-client-dev</code></pre> <p>在安装以上三个依赖后再去执行cmake</p> <pre><code>cmake -DPYTHON_BINDINGS&#61;ON -DCMAKE_INSTALL_PREFIX:PATH&#61;/usr ..</code></pre> <p>这时就可以发现文件cmake没有出现问题</p> <p>然后编译</p> <pre><code>make</code></pre> <pre><code>sudo make install</code></pre> <pre><code>sudo ldconfig</code></pre> <pre><code>cd ../..</code></pre> <h1 id="2.%E5%AE%89%E8%A3%85libad9361-iio">2.安装libad9361-iio</h1> <pre><code>git clone https://github.com/analogdevicesinc/libad9361-iio.git</code></pre> <pre><code>cd libad9361-iio</code></pre> <pre><code>mkdir build &amp;&amp; cd build</code></pre> <pre><code>cmake -DCMAKE_INSTALL_PREFIX:PATH&#61;/usr ..</code></pre> <pre><code>make</code></pre> <pre><code>sudo make install</code></pre> <pre><code>sudo ldconfig</code></pre> <pre><code>cd ../..</code></pre> <h1 id="3.%E5%AE%89%E8%A3%85gr-iio">3.安装gr-iio</h1> <pre><code>git clone https://github.com/analogdevicesinc/gr-iio.git</code></pre> <pre><code>cd gr-iio</code></pre> <pre><code>git checkout upgrade-3.8</code></pre> <pre><code>mkdir build &amp;&amp; cd build</code></pre> <pre><code>cmake -DCMAKE_INSTALL_PREFIX:PATH&#61;/usr ..</code></pre> <p>这时对文件cmake出现错误&#xff0c;发现缺少一些模块&#xff0c;还需要安装一些东西。</p> <h2 id="3.1%E5%AE%89%E8%A3%85swig">3.1安装swig</h2> <p>先去官网&#xff08;<a href="http://www.swig.org/download.html" title="http://www.swig.org/download.html">http://www.swig.org/download.html</a>&#xff09;下载压缩包&#xff0c;笔者下载的是swig 4.0.2版本。</p> <p>安装g&#43;&#43;</p> <pre><code>sudo apt-get install g&#43;&#43;</code></pre> <p>安装pcre</p> <pre><code>sudo apt-get install libpcre3 libpcre3-dev</code></pre> <p>去下载了安装包的文件夹解压</p> <pre><code>chmod 777 swig-4.0.2.tar.gz</code></pre> <pre><code>tar -xzvf swig-4.0.2.tar.gz </code></pre> <p>进入解压后的文件夹下编译安装</p> <pre><code>./configure --prefix&#61;/home/swig</code></pre> <pre><code>make</code></pre> <pre><code>make install</code></pre> <p>打开./bashrc文件</p> <pre><code>sudo gedit ~/.bashrc</code></pre> <p>在最后一行加上&#xff1a;</p> <pre><code>export PATH&#61;/home/swig/bin:$PATH</code></pre> <p>然后右上角保存退出</p> <p>在命令行生效&#xff1a;</p> <pre><code>source ~/.bashrc</code></pre> <h2 id="3.2%E5%AE%89%E8%A3%85gmp">3.2安装gmp</h2> <p>先去官网&#xff08;<a href="https://gmplib.org/" title="https://gmplib.org/">https://gmplib.org/</a>&#xff09;下载安装包&#xff0c;笔者下载的是gmp-6.0.1.tar.zst。</p> <p>到下载压缩包的文件夹下解压&#xff0c;在此之前需要先去安装解压tar.zst文件的工具&#xff1a;</p> <pre><code>sudo apt-get install zstd</code></pre> <p>然后解压&#xff1a;</p> <pre><code>tar -| zstd -xvf gmp-6.2.1.tar.zst</code></pre> <p>进入解压后的文件夹&#xff1a;</p> <pre><code>./configure</code></pre> <pre><code>make</code></pre> <pre><code>make check</code></pre> <pre><code>sudo make install</code></pre> <h2 id="3.3%E5%AE%89%E8%A3%85doxygen">3.3安装doxygen</h2> <p>在终端输入&#xff1a;</p> <pre><code>sudo apt-get doxygen</code></pre> <p>到此所需要的模块就齐全了&#xff0c;下面继续安装gr-iio。</p> <hr /><p>进入gr-iio的build文件夹重新cmake</p> <pre><code>cmake -DCMAKE_INSTALL_PREFIX:PATH&#61;/usr ..</code></pre> <pre><code>make</code></pre> <pre><code>sudo make install</code></pre> <pre><code>cd ../..</code></pre> <pre><code>sudo ldconfig</code></pre> <p>到这里就全部安装好了&#xff0c;可以去gnuradio右上角搜索iio查看iio模块了。</p> <p></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于Hexo和GitHub的个人博客搭建</title>
      <link href="/2023/03/03/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGitHub%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/03/03/%E5%9F%BA%E4%BA%8EHexo%E5%92%8CGitHub%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>系统&#xff1a;win10/11 </p> <p>框架&#xff1a;Hexo</p> <p>远端部署&#xff1a;GitHub</p> <span id="more"></span><h1>1.安装node.js和git</h1> <p style="margin-left:0;text-align:justify;">进入node官网https://nodejs.org/zh-cn/&#xff0c;下载windows64位的18.14.2版本&#xff0c;安装过程一直next即可。打开命令行&#xff0c;</p> <pre><code class="language-python">node -v</code></pre> <pre><code class="language-python">npm -v</code></pre> <p>查看版本&#xff0c;如下&#xff1a;</p> <p style="margin-left:0;text-align:justify;"><img alt="" height="133" src="https://img-blog.csdnimg.cn/68326d3b7f4b46fe91d03598ece36b3e.png" width="391" /></p> <p style="margin-left:0;text-align:justify;">到git官网下载windows版本的git&#xff08;https://git-scm.com/download/win&#xff09;&#xff0c;点击下载&#xff08;下载速度看网速&#xff09;&#xff0c;安装成功后&#xff0c;鼠标右键会有Git GUI Here和Git Bash Here两个选项。</p> <h1 style="margin-left:0px;text-align:justify;">2.安装hexo</h1> <p style="margin-left:0;text-align:justify;">在D盘新建一个名为Blog的文件夹&#xff0c;用来存放个人博客的相关文件&#xff0c;进入这个文件夹&#xff0c;右键Git Bash Here&#xff0c;</p> <pre><code>npm install -g hexo-cli</code></pre> <p style="margin-left:0;text-align:justify;"><span style="color:#333333;">结果如下&#xff1a;</span></p> <p style="margin-left:0;text-align:justify;"><img alt="" height="253" src="https://img-blog.csdnimg.cn/336f32f385dc4b6f917a63e6cd4d33a2.png" width="865" /></p> <p> 新建名为hexoblog的项目&#xff1a;</p> <pre><code>hexo init hexoblog</code></pre> <p style="margin-left:0;text-align:left;">结果如下&#xff1a;</p> <p style="margin-left:0;text-align:left;"><img alt="" height="101" src="https://img-blog.csdnimg.cn/fb3ff170d6824839a4187a84e905a23e.png" width="806" /></p> <p> 这时发现Blog文件夹下已新建了hexoblog文件夹&#xff0c;存放这我们这个博客的所有文件&#xff0c;若此次搭建中某一步失败&#xff0c;可删掉这个文件夹重新来。</p> <p style="margin-left:0;text-align:justify;">进入hexoblog文件夹:</p> <pre><code>cd hexoblog</code></pre> <p>初始化&#xff1a;</p> <pre><code>npm install</code></pre> <p>启动hexo服务&#xff1a;</p> <pre><code>hexo s</code></pre> <p style="margin-left:0;text-align:justify;">此时打开浏览器进入<span style="background-color:#ffffff;"><span style="color:#3f3f3f;">http://localhost:4000/</span></span><span style="background-color:#ffffff;"><span style="color:#3f3f3f;">便可进入</span></span><span style="background-color:#ffffff;"><span style="color:#3f3f3f;">hexo</span></span><span style="background-color:#ffffff;"><span style="color:#3f3f3f;">的个人博客主页&#xff0c;如下&#xff1a;</span></span></p> <p style="margin-left:0;text-align:justify;"><img alt="" height="407" src="https://img-blog.csdnimg.cn/4399fcc7c5ca49b7ac4c79bfe9e4a89c.png" width="865" /></p> <p> 命令行按clrt&#43;c退出。</p> <h1>3.部署到github</h1> <p style="margin-left:0;text-align:justify;">这是本地的博客&#xff0c;需要部署到远端去才可以被人访问。付费可以使用阿里云&#xff0c;免费可以部署到github上。</p> <p style="margin-left:0;text-align:justify;">浏览器打开github.com登录&#xff0c;进入个人主页&#xff0c;右上角加号New repository新建仓库&#xff0c;仓库名&#xff08;repository name&#xff09;必须是你的github昵称加上github.io的后缀。简介&#xff08;Description&#xff09;可以写我的博客。然后点击Create repository创建仓库。</p> <p style="margin-left:0;text-align:justify;">返回刚才的git命令行&#xff0c;安装deplgyer插件&#xff1a;</p> <pre><code>npm install –save hexo-deployer-git</code></pre> <p>用notepad&#43;&#43;打开hexoblog文件夹下的_config.yml&#xff08;没有notepad&#43;&#43;的安装一个&#xff09;&#xff0c;在文件的最后一行修改为&#xff1a;</p> <pre><code class="language-python">type: gitrepo: “你的github仓库的网址”  #&#xff08;注意type和repo的冒号后面要加空格&#xff09;branch: master</code></pre> <p style="margin-left:0;text-align:justify;">如下&#xff1a;</p> <p style="margin-left:0;text-align:justify;"><img alt="" height="187" src="https://img-blog.csdnimg.cn/8d9b24a97e6444728b7fdd3bc6ef8ebf.png" width="865" /></p> <p> 保存退出。</p> <p style="margin-left:0;text-align:justify;">返回git命令行&#xff0c;输入&#xff1a;</p> <pre><code class="language-python">git config --global user.email &#34;xxx&#34;  # 引号里为你的github的注册邮箱</code></pre> <pre><code class="language-python">git config --global user.name &#34;xxx&#34;  # 引号里填上你的github的用户名</code></pre> <p>为了方便起见&#xff0c;把这两行代码起别名为操作I。</p> <p>然后部署到github&#xff1a;</p> <pre><code class="language-python">hexo d</code></pre> <p style="margin-left:0;text-align:justify;">打开浏览器网址栏输入你的以github.io为后缀的仓库名&#xff0c;就可以打开你的个人博客了。</p> <h1 style="margin-left:0px;text-align:justify;">4.更换博客主题</h1> <p style="margin-left:0;text-align:justify;">这里以yilia主题为例&#xff0c;yilia主题地址在&#xff1a;https://github.com/litten/hexo-theme-yilia。</p> <p style="margin-left:0;text-align:justify;">在hexoblog文件夹下右键Git Bash here打开git命令行输入&#xff1a;</p> <pre><code class="language-python">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code></pre> <p>完成后就会发现hexoblog文件夹下的themes文件夹下clone了下载好的新主题文件。</p> <p>用notepad&#43;&#43;打开hexoblog文件夹下的_config.yml&#xff0c;修改theme: landscape一行为&#xff1a;</p> <pre><code class="language-python">theme: yilia</code></pre> <p>以后换什么主题就修改为相应名字&#xff0c;保存退出。</p> <p>在git命令行输入&#xff1a;</p> <pre><code class="language-python">hexo g</code></pre> <pre><code class="language-python">hexo s</code></pre> <p>完成本地更换&#xff0c;推到远端之前需要重复操作I&#xff0c;然后再命令行输入&#xff1a;</p> <pre><code class="language-python">hexo d</code></pre> <p style="margin-left:0;text-align:justify;">这样打开博客就会发现主题已更换了,如下&#xff1a;</p> <p style="margin-left:0;text-align:justify;"><img alt="" height="801" src="https://img-blog.csdnimg.cn/03d7e99ad94a46c0a7380576a8ba220b.png" width="1200" /></p> <p> 关于微博知乎链接、自我介绍等都可以自己设置。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>双系统（win11+Ubuntu18.04）并安装GNURadio（下）</title>
      <link href="/2023/03/03/%E5%8F%8C%E7%B3%BB%E7%BB%9F%EF%BC%88win11-Ubuntu18-04%EF%BC%89%E5%B9%B6%E5%AE%89%E8%A3%85GNURadio%EF%BC%88%E4%B8%8B%EF%BC%89/"/>
      <url>/2023/03/03/%E5%8F%8C%E7%B3%BB%E7%BB%9F%EF%BC%88win11-Ubuntu18-04%EF%BC%89%E5%B9%B6%E5%AE%89%E8%A3%85GNURadio%EF%BC%88%E4%B8%8B%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>在上篇已经介绍了如何进行双系统在物理主机上安装Ubuntu系统&#xff0c;本文将介绍如何在Ubuntu上安装GNURadio。</p> <p>系统&#xff1a;Ubuntu18.04</p> <p>软件&#xff1a;GNURadio 3.8</p> <span id="more"></span><p>打开终端&#xff1a;</p> <pre><code>sudo add-apt-repository ppa:gnuradio/gnuradio-releases-3.8</code></pre> <p>这里笔者安装的是3.8版本&#xff0c;如果需要安装其他版本可以自行修改。</p> <p>然后更新&#xff1a;</p> <pre><code>sudo apt update</code></pre> <p>安装&#xff1a;</p> <pre><code>sudo apt install gnuradio</code></pre> <p>安装查看GNURadio安装版本</p> <pre><code>gnuradio-companion --help</code></pre> <p>到这里就安装好了GNURadio&#xff0c;但如果面对不同的硬件设备还需要再安装相应的驱动。</p> <p>比如如果使用ANTSDR&#xff0c;就需要安装Pluto SDR驱动&#xff0c;安装过程可以参考笔者的另一篇博客&#xff08;<a href="http://t.csdn.cn/zHGuL" title="http://t.csdn.cn/zHGuL">http://t.csdn.cn/zHGuL</a>&#xff09;。</p> <p>如果使用hackrf的话&#xff0c;可以参考Bilibili的一个UP主的文章&#xff0c;见下方链接。</p> <p>&#xff08;<a href="https://www.bilibili.com/read/cv3884803?spm_id_from&#61;333.999.0.0" title="Ubuntu下 HackRF的GNURadio环境搭建 - 哔哩哔哩 (bilibili.com)">Ubuntu下 HackRF的GNURadio环境搭建 - 哔哩哔哩 (bilibili.com)</a>&#xff09;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>双系统（win11+Ubuntu18.04）并安装GUNRadio（上）</title>
      <link href="/2023/03/03/%E5%8F%8C%E7%B3%BB%E7%BB%9F%EF%BC%88win11-Ubuntu18-04%EF%BC%89%E5%B9%B6%E5%AE%89%E8%A3%85GUNRadio%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
      <url>/2023/03/03/%E5%8F%8C%E7%B3%BB%E7%BB%9F%EF%BC%88win11-Ubuntu18-04%EF%BC%89%E5%B9%B6%E5%AE%89%E8%A3%85GUNRadio%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>因为有很多软件是在Linux系统下运行&#xff0c;所以使用Linux系统成了很多人的必需。如果使用虚拟机安装Linux系统的话&#xff0c;在运行大项目的时候会闪退或者虚拟机崩溃的情况时有发生&#xff0c;所以建议直接在物理主机上安装Linux系统。</p> <p>系统&#xff1a;windows11&#43;Ubuntu18.04</p> <p>1.下载镜像写入软件。</p> <span id="more"></span><p>去网站&#xff08;<a href="https://sourceforge.net/projects/win32diskimager/" title="Win32 Disk Imager download | SourceForge.net">Win32 Disk Imager download | SourceForge.net</a>&#xff09;下载安装包。</p> <p><img alt="" height="339" src="https://img-blog.csdnimg.cn/37b0f02ab59d4dd5b7453348438d9b7a.png" width="916" /></p> <p>一步步安装。</p> <p>2.下载系统镜像。</p> <p>因为本文使用的是Ubuntu&#xff0c;所以去官网下载页面&#xff08;<a href="https://cn.ubuntu.com/download/desktop" title="下载Ubuntu桌面系统 | Ubuntu">下载Ubuntu桌面系统 | Ubuntu</a>&#xff09; 下载.iso文件&#xff0c;笔者下载的是Ubuntu18.04版本&#xff0c;若需其他版本请自行选择。</p> <p><img alt="" height="633" src="https://img-blog.csdnimg.cn/3441db14d5d34deeb0190593aeb975f8.png" width="1103" /></p> <p>3.写入镜像</p> <p>提前准备大于8G的并且已经清空U盘文件并格式化&#xff08;一定要注意重要文件的备份&#xff09;的U盘&#xff0c;打开安装好的Win32DiskImager&#xff0c;点击加载映像文件&#xff0c;找到刚才下好的.iso文件选择添加&#xff0c;等待进度条结束&#xff0c;系统就写入了U盘。</p> <p><img alt="" height="332" src="https://img-blog.csdnimg.cn/937f0c5bd72b4fda89ec2b941f565482.png" width="476" /></p> <p>4.新建磁盘分区</p> <p>右击我的电脑-管理-磁盘管理&#xff0c;选择要在哪个磁盘上安装系统的右击压缩卷&#xff08;具体压缩多少空间出来取决于你硬盘的大小以系统所需要的空间&#xff0c;因为每个人的情况不同&#xff0c;所以本文的磁盘分区以笔者为例&#xff0c;仅供参考&#xff09;&#xff0c;然后压缩后的卷不要分区&#xff0c;这就是我们要安装Ubuntu的磁盘。</p> <p>5.安装系统</p> <p>将U盘插入电脑的USB接口&#xff08;注意&#xff1a;台式机要插到机箱后的主板上的USB接口&#xff09;&#xff0c;然后进入BISO系统&#xff0c;不同主板进入BISO系统的按键不同&#xff0c;建议百度一下。进入BISO界面后进入BOOT&#xff0c;然后选择启动项&#xff0c;将EFI&#43;U盘这个选项排到第一位&#xff0c;保存退出&#xff08;这里是一般老主板的设置方法&#xff0c;不同BISO系统如何设置启动项建议百度&#xff0c;还有就是没有EFI文件格式的U盘选项的话应该是很老的主板了&#xff0c;如何用legacy作为启动项后面有时间放到win10安装上讲&#xff0c;不过网上很多教程就不再这里赘述了&#xff09;。</p> <p>然后电脑重启后就会出现Ubuntu安装界面&#xff0c;一步一步安装&#xff0c;然后进入磁盘分区界面。这里给出笔者的方案&#xff0c;读者根据自己的实际需求确定分区方案。</p> <p>我给安装安装Ubuntu系统提前压缩好100G&#xff0c;然后EFI系统分区我给出1GB&#xff0c;交换空间我给出18GB&#xff08;因为要比电脑内存稍微大一点&#xff09;&#xff0c;然后/C给出50GB&#xff0c;其他全给/home。</p> <p>磁盘分区好后&#xff0c;注意要下方选项选择安装在哪个位置的时候一定要选择EFI的这个区&#xff0c;也就是我给出1GB的这个区。</p> <p>然后就是一步一步安装&#xff0c;语言等一些选项&#xff0c;等待进度条结束&#xff0c;系统就安装好了。</p> <p>6.联网</p> <p>如果连接普通路由wifi或者手机热点的话&#xff0c;可以左上角直接点击连接&#xff0c;但要是连接校园网的话&#xff0c;要对网络进行设置&#xff0c;进入【安全】界面&#xff0c;安全选择WPA和WPA2企业&#xff0c;认证选择受保护的EAP&#xff08;PEAP&#xff09;&#xff0c;选择不需要CA证书&#xff0c;然后在用户名栏和密码栏分别填写校园网的账号和密码。</p> <p>7.修改时间</p> <p>   如果不修改时间的话&#xff0c;回到windows系统后会发现时间不对。打开终端输入以下命令&#xff1a;</p> <pre><code>sudo apt-get update</code></pre> <pre><code>sudo apt install ntpdate</code></pre> <pre><code class="language-sql">sudo ntpdate time.windows.como</code></pre> <pre><code>sudo hwclock --localtime --systohc</code></pre> <p>8.更换节点</p> <p>打开软件更新器&#xff0c;等待软件的更新。更新完成之后&#xff0c;点击左上角Ubuntu设置&#xff0c;点击其他服务器&#xff0c;笔者选择的是aliyun,,也可以选择tsinghua源或者hauweicloud。不过如果网络条件好的话倒也没有必要更换源。</p> <p>到这里系统安装和相关设置就完成了&#xff0c;下篇&#xff08;<a href="http://t.csdn.cn/YrPU7" title="http://t.csdn.cn/YrPU7">http://t.csdn.cn/YrPU7</a>&#xff09;将会介绍如何在Ubuntu18.04的系统安装GNURadio。</p> <p>重启电脑可以看到选择进入系统的界面&#xff0c;第一个即为Ubuntu系统&#xff0c;第三个即为进入Windows系统。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
